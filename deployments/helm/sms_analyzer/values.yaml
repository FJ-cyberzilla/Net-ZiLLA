# Global settings
global:
  environment: production
  domain: analyzer.yourcompany.com

# Application configuration
app:
  replicaCount: 3
  image:
    repository: your-registry/sms-analyzer
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
    metricsPort: 9090
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  livenessProbe:
    httpGet:
      path: /health
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /ready
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5

# Configuration
config:
  logLevel: "info"
  enableAPI: true
  enableCLI: true
  rateLimit: 100
  analysisTimeout: 30

# Database configuration
database:
  enabled: true
  type: "postgresql"
  host: "postgresql"
  port: 5432
  name: "sms_analyzer"
  username: "analyzer"
  password: ""

# Cache configuration
redis:
  enabled: true
  host: "redis-master"
  port: 6379
  password: ""

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: analyzer.yourcompany.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: sms-analyzer-tls
      hosts:
        - analyzer.yourcompany.com

# Monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s

# Autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

  # deployments/helm/sms-analyzer/values.yaml

# Application Configuration
app:
  replicaCount: 3
  image:
    repository: your-registry/sms-analyzer
    tag: latest
    pullPolicy: IfNotPresent
    pullSecret: ""  # For private registries

# Pod Disruption Budget
pdb:
  minAvailable: "50%"  # Ensure at least 50% of pods are always available

# Database Dependencies
postgresql:
  enabled: true
  auth:
    postgresPassword: ""  # Will be generated if empty
    username: "analyzer"
    password: ""  # Will be generated if empty
    database: "sms_analyzer"
  persistence:
    enabled: true
    size: 10Gi
  resources:
    requests:
      memory: 256Mi
      cpu: 250m

# Cache Dependencies
redis:
  enabled: true
  auth:
    password: ""  # Will be generated if empty
  architecture: standalone
  master:
    persistence:
      enabled: true
      size: 8Gi
    resources:
      requests:
        memory: 128Mi
        cpu: 100m

# API Keys for External Services
apiKeys:
  virusTotal: ""
  abuseIPDB: ""
  googleSafeBrowsing: ""
  ip2Location: ""

# Authentication
auth:
  jwtSecret: ""  # Will be generated if empty

# Security
security:
  encryptionKey: ""  # Will be generated if empty

# Monitoring Dependencies
monitoring:
  enabled: true
  prometheus:
    enabled: true
  grafana:
    enabled: true
    adminPassword: ""  # Will be generated if empty

# Cert Manager for TLS
cert-manager:
  enabled: true

# Resource configurations for dependencies
resources:
  postgresql:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  redis:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"
